{% extends 'base.html.twig' %}

{% block title %}Hello SearchController!
{% endblock %}

{% block body %}
	<twig:Header is_logged_in="{{ app.user ? '1' : '0' }}" :searchdto="searchDto"></twig:Header>

	<main class="w-full max-w-[960px] my-5 mx-auto p-4 grid grid-cols-[auto_200px] gap-8">
		<div>
			<div class="relative rounded-base w-full h-80 bg-[url('/images/bg_image_book.png')] bg-center bg-cover">
				<img src="{{ livre.image }}" alt="cover" class="w-auto h-full object-cover absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 rounded-md z-10">
			</div>
			<div class="mt-2">
				<div class='flex justify-between items-center'>
					<div>
						<h1 class="text-2xl font-extrabold text-primary line-clamp-1">{{ livre.titre }}</h1>
						<p class="text-base text-primary line-clamp-1">{{ livre.auteur }}</p>
					</div>
						<twig:ToggleWishlist articleId="{{ livre.id }}" isInWishlist="{{ is_in_wishlist ? '1' : '0' }}"></twig:ToggleWishlist>
				</div>
				<div class="px-3 w-min bg-primary rounded-base mt-2">
					<p class="text-base font-bold text-white">{{ livre.prix }}€</p>
				</div>
			</div>

			<h2 class="font-bold text-lg text-primary mt-5">Description</h2>
			<p class="text-base text-primary text-justify mt-2 line-clamp-6">{{ livre.resume }}</p>

			<h2 class="font-bold text-lg text-primary mt-5">Détails</h2>
			<div class="grid grid-cols-2 gap-4 mt-2">
				<div>
					<p class="text-base font-semibold  text-primary">Catégorie</p>
					<p class="text-base font-light text-primary">{{ livre.categorie }}</p>
				</div>
				<div>
					<p class="text-base font-semibold  text-primary">ISBN</p>
					<p class="text-base font-light text-primary">{{ livre.isbn }}</p>
				</div>
				<div>
					<p class="text-base font-semibold text-primary">Editeur</p>
					<p class="text-base font-light text-primary">{{ livre.editeur }}</p>
				</div>
				<div>
					<p class="text-base font-semibold  text-primary">Date de parution</p>
					<p class="text-base font-light text-primary">{{ livre.dateDePublication }}</p>
				</div>
				<div>
					<p class="text-base font-semibold  text-primary">Nombre de pages</p>
					<p class="text-base font-light text-primary">{{ livre.nbPages }}</p>
				</div>
			</div>


		</div>
		<div>
			<h2 class="font-bold text-lg text-primary">Ajouter au panier</h2>
			<div class="mt-2">
				<form method="post" action="{{ path('add_to_cart', {'id': livre.id}) }}" class="w-full mt-2">
					<input type="hidden" name="id" value="{{ livre.id }}">
					<div class="flex gap-2 items-center">
						<label>Quantité</label>
						<input type="number" value="1" name="quantity" class="w-[68px] rounded-base px-3 py-1 border border-primary" min="1" step="1">
					</div>
					<p class="text-primary mt-2">
						Total:
						<span id="total-price"></span>€
					</p>

					<button  type="submit" class="bg-primary text-white rounded-base py-2 w-full mt-2">Ajouter au panier</button>
				</form>
			</div>
			{% if livresLike is not null %}
				<h2 class="font-bold text-lg text-primary mt-5">De la même catégorie</h2>
				<div class="flex flex-col gap-3 mt-2">
					{% for livre in livresLike %}
						<a href="/product/{{ livre.id }}" class="space-y-3">
							<div class="h-64 w-full flex justify-center items-center overflow-hidden rounded-base">
								<img src="{{ livre.image }}" alt="image product" class="w-full">
							</div>
							<main>
								<h2 class="text-primary text-base">{{ livre.titre }}</h2>
								<div class="text-secondary text-sm">{{ livre.auteur }}</div>
								<div class="text-secondary text-sm">{{ livre.prix }}€</div>
							</main>
						</a>
					{% endfor %}

				</div>
			{% endif %}
		</main>

		<script>
			document.addEventListener('DOMContentLoaded', function () {
const prixUnitaire = {{ livre.prix }};
const quantiteInput = document.querySelector('input[name="quantity"]');
const totalSpan = document.querySelector('#total-price');

// Fonction pour mettre à jour le prix total
function updateTotal() {
const quantite = quantiteInput.value;
const total = (prixUnitaire * quantite).toFixed(2); // Arrondi à deux décimales
totalSpan.textContent = total;
}

// Mettre à jour le total initial
updateTotal();

// Écouteur d'événement pour la modification de la quantité
quantiteInput.addEventListener('input', updateTotal);
});


		</script>
	{% endblock %}
